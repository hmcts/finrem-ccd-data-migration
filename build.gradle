buildscript {
    ext {
        springBootVersion = '2.2.6.RELEASE'
    }
    repositories {
        jcenter()
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'idea'
    id 'application'
    id 'checkstyle'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'com.jfrog.bintray' version '1.8.0'
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'jacoco'
    id 'org.sonarqube' version '3.0'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
}

group = 'uk.gov.hmcts.reform.finrem.ccddatamigration'
version = '1.0.0'
sourceCompatibility = 11
targetCompatibility = 11

mainClassName = 'uk.gov.hmcts.reform.finrem.ccddatamigration.CcdDataMigrationApplication'

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation'
}

repositories {
    jcenter()
    mavenLocal()
    maven { url 'https://repo.spring.io/libs-milestone' }
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
}

distributions {
    main {
        contents {
            from(file("$projectDir/lib/AI-Agent.xml")) {
                into "lib"
            }
        }
    }
}

def versions = [
        ccdStoreClient: '4.7.3',
        commonsLang3: '3.10',
        commonsIo: '2.7',
        feignHttpClient: '10.10.1',
        jsonAssert: '1.2.3',
        junit: '4.13',
        lombok: '1.18.12',
        reformLogging: '5.1.6',
        restAssured: '3.0.3',
        serenity: '2.2.10',
        serenityCucumber: '1.9.51',
        serviceTokenGenerator: '3.1.1',
        unirest: '1.4.9',
        wiremockVersion: '2.27.1'
]

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIo
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: versions.feignHttpClient
    implementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    implementation group: 'org.apache.commons', name: 'commons-lang3', version : versions.commonsLang3
    implementation group: 'org.springframework', name: 'spring-context-support'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    implementation (group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign')
            {
                exclude group: 'io.reactivex', module: 'io.reactivex'
                exclude group: 'io.reactivex', module: 'rxnetty'
                exclude group: 'io.reactivex', module: 'rxnetty-contexts'
                exclude group: 'io.reactivex', module: 'rxnetty-servo'
            }
    implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-httpcomponents', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.reformLogging
    implementation (group: 'uk.gov.hmcts.reform', name:'service-auth-provider-client', version: versions.serviceTokenGenerator)
            {
                exclude group: 'io.reactivex', module: 'io.reactivex'
                exclude group: 'io.reactivex', module: 'rxnetty'
                exclude group: 'io.reactivex', module: 'rxnetty-contexts'
                exclude group: 'io.reactivex', module: 'rxnetty-servo'
            }
    implementation (group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: versions.ccdStoreClient)
            {
                exclude group: 'io.reactivex', module: 'io.reactivex'
                exclude group: 'io.reactivex', module: 'rxnetty'
                exclude group: 'io.reactivex', module: 'rxnetty-contexts'
                exclude group: 'io.reactivex', module: 'rxnetty-servo'
            }

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testImplementation group: 'com.github.tomakehurst', name:'wiremock', version: versions.wiremockVersion
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

checkstyle.toolVersion = '8.32'
checkstyle.configFile = new File(rootDir, "checkstyle.xml")
checkstyle.maxWarnings(0)

// make build fail on Checkstyle issues (https://github.com/gradle/gradle/issues/881)
tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains("<error ")) {
                throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
            }
        }
    }
}

task developAddRelaseSuffix() {
    version = "${version}-SNAPSHOT"
}
